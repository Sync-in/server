server:
  # default host : `0.0.0.0`
  host: 0.0.0.0
  # default port : `8080`
  port: 8080
  # workers: `auto` (use all cpus) | number
  # regardless of the value, starts with at least 2 workers, 1 worker is dedicated to scheduled tasks
  workers: 2
  # trust proxy: number (trust the nth hop from the front-facing proxy server as the client) | `true` | `false` | `127.0.0.1,192.168.1.1/24`
  # default: 1
  trustProxy: 1
  # restartOnFailure: automatically restart workers if they are killed or die
  # default: `true`
  restartOnFailure: true
logger:
  # level: `trace` | `debug` | `info` | `warn` | `error` | `fatal`
  # default: `info`
  level: info
  # stdout: if false logs are written to the run directory
  # default: `true`
  stdout: true
  # colorize output
  # default: `true`
  colorize: true
  # path to the log file used when stdout is set to false
  filePath:
mysql:
  # required
  url: mysql://user:MySQLRootPassword@localhost:3306/database
  # default: `false`
  logQueries: false
cache:
  # adapter: `mysql` | `redis`
  # default: `mysql`
  adapter: mysql
  # ttl in seconds
  # default: `60`
  ttl: 60
  # redis adapter url
  # default: `redis://127.0.0.1:6379`
  redis: redis://127.0.0.1:6379
websocket:
  # adapter: `cluster` (Node.js Workers: default) | `redis`
  # default: `cluster`
  adapter: cluster
  # cors origin allowed
  # default: `*`
  corsOrigin: '*'
  # redis adapter url
  # default: `redis://127.0.0.1:6379`
  redis: redis://127.0.0.1:6379
mail:
  host: smtp.server.com
  # default: `25`
  port: 25
  # default: `Sync-in<notification@sync-in.com>`
  sender: 'Sync-in<notification@sync-in.com>'
  # optional
  auth:
    user: user
    pass: password
  # secure: defines if the connection should use SSL (if true) or not (if false)
  # note: setting `secure: false` does not necessarily mean messages are sent in plaintext
  # if the server supports STARTTLS, the connection is usually upgraded to TLS automatically
  # default: `false`
  secure: false
  # ignoreTLS: if true, disables the use of STARTTLS even if the server advertises it
  # default: false
  ignoreTLS: false
  # rejectUnauthorized: reject the connection if the server's TLS certificate is invalid
  # default: false
  rejectUnauthorized: false
  # enable logger
  # default: `false`
  logger: false
  # set log level to debug
  # default: `false`
  debug: false
auth:
  # adapter : `mysql` | `ldap`
  # default: `mysql`
  method: mysql
  # key used to encrypt user secret keys in the database
  # optional, but strongly recommended
  # warning: do not change or remove the encryption key after MFA activation, or the codes will become invalid
  encryptionKey: changeEncryptionKeyWithStrongKey
  # multifactor authentication
  mfa:
    # totp configuration
    totp:
      # enable TOTP authentication
      # default: true
      enabled: true
      # name displayed in the authentication app (FreeOTP, Proton Authenticator, Aegis Authenticator etc.)
      # default: Sync-in
      issuer: Sync-in
  # cookie sameSite setting: `lax` | `strict`
  # default: `strict`
  cookieSameSite: strict
  token:
    access:
      # used for token and cookie signatures
      # required
      secret: changeAccessWithStrongSecret
      # token expiration = cookie maxAge
      # default: `30m`
      expiration: 30m
    refresh:
      # used for token and cookie signatures
      # required
      secret: changeRefreshWithStrongSecret
      # token expiration = cookie maxAge
      # default: `4h`
      expiration: 4h
  ldap:
    # e.g: [ldap://localhost:389, ldaps://localhost:636] (array required)
    servers: []
    # baseDN: distinguished name ( e.g.ou=people,dc=ldap,dc=sync-in,dc=com)
    baseDN:
    # filter, e.g: (acl=admin)
    filter:
    attributes:
      # login attribute (e.g. `uid` | `sAMAccountName` | `userPrincipalName`)
      # default: `uid`
      login: uid
      # email attribute: `mail` or `email`
      # default: `mail`
      email: mail
applications:
  files:
    # required
    dataPath: /home/sync-in
    # default: 5368709120 (5 GB)
    maxUploadSize: 5368709120
    # Show files starting with a dot in the file explorer
    # default: false
    showHiddenFiles: false
    onlyoffice:
      # enable onlyoffice integration
      # default: false
      enabled: false
      # for an external server (e.g., https://onlyoffice.domain.com), remember the url must be accessible from browser !
      # if externalServer is empty (case of official docker compose), we use the local instance
      # default: null
      externalServer:
      # secret used for jwt tokens, it must be the same on the onlyoffice server
      # required
      secret: onlyOfficeSecret
      # if you use https, set to `true`
      # default: `false`
      verifySSL: false
  appStore:
    # repository: `public` | `local`
    # default: `public`
    repository: public
